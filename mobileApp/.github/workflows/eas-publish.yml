name: EAS Build and Submit

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-submit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.20.2

      - name: Set up Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - name: Bump version in app.json
        id: bump_version
        run: node ./.github/scripts/bump-version.js

      - name: Commit and push app.json version bump
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # Check if app.json was actually changed by the script
          if ! git diff --quiet app.json; then
            echo "app.json changed, committing new version."
            # Use the output from the bump_version step for the commit message
            git add app.json
            git commit -m "ci: Bump app version to ${{ steps.bump_version.outputs.new_version }} [skip ci]"
            echo "Pushing version bump to ${{ steps.bump_version.outputs.new_version }}"
            git push
          else
            echo "No version change in app.json to commit."
          fi

      - name: Prebuild check
        run: npx expo prebuild --platform android && npx expo prebuild --platform ios

      - name: Build on EAS
        run: eas build --platform all --profile production --non-interactive --wait

      # Note: --wait ensures the build finishes before submission.
      # Alternatively, you could trigger submission based on build webhooks
      # or have separate build/submit workflows.

      - name: Submit to stores
        run: eas submit --platform all --profile production --latest --non-interactive
        # --latest tells EAS Submit to find the most recent successful build
        # for the 'production' profile.